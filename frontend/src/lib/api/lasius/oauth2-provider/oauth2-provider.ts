/**
 * Lasius - Open source time tracker for teams
 * Copyright (c) Tegonal Genossenschaft (https://tegonal.com)
 *
 * This file is part of Lasius.
 *
 * Lasius is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 *
 * Lasius is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with Lasius.
 * If not, see <https://www.gnu.org/licenses/>.
 *
 */

/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * Lasius API
 * Track your time
 * OpenAPI spec version: 1.0.4+7-a1eb9022+20231108-2147
 */
import type {
  ModelsOAuthUserId,
  ModelsOAuthUserRegistration,
  ModelsPasswordChangeRequest,
  ModelsOAuthAuthorizationCodeLoginRequest,
} from '..';
import { lasiusAxiosInstance } from '../../lasiusAxiosInstance';
import type { BodyType } from '../../lasiusAxiosInstance';

// eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P
) => any
  ? P
  : never;

/**
 * @summary --------please annotate------
 */
export const registerOAuthUser = (
  modelsOAuthUserRegistration: BodyType<ModelsOAuthUserRegistration>,
  options?: SecondParameter<typeof lasiusAxiosInstance>
) => {
  return lasiusAxiosInstance<ModelsOAuthUserId>(
    {
      url: `/oauth2/user/register`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: modelsOAuthUserRegistration,
    },
    options
  );
};

/**
 * @summary Change current user's password
 */
export const updateUserPassword = (
  modelsPasswordChangeRequest: BodyType<ModelsPasswordChangeRequest>,
  options?: SecondParameter<typeof lasiusAxiosInstance>
) => {
  return lasiusAxiosInstance<void>(
    {
      url: `/oauth2/user/update-password`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: modelsPasswordChangeRequest,
    },
    options
  );
};

/**
 * @summary access to internally provided oauth2 provider. Use for demo purposes only!
 */
export const oauthAccessToken = (options?: SecondParameter<typeof lasiusAxiosInstance>) => {
  return lasiusAxiosInstance<unknown>({ url: `/oauth2/access_token`, method: 'post' }, options);
};

/**
 * @summary login to the oauth provider with the authorization code flow
 */
export const login = (
  modelsOAuthAuthorizationCodeLoginRequest: BodyType<ModelsOAuthAuthorizationCodeLoginRequest>,
  options?: SecondParameter<typeof lasiusAxiosInstance>
) => {
  return lasiusAxiosInstance<unknown>(
    {
      url: `/oauth2/login`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: modelsOAuthAuthorizationCodeLoginRequest,
    },
    options
  );
};
